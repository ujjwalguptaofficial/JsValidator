{"version":3,"file":"JsValidator.js","sourceRoot":"","sources":["../Script/Business/MainLogic.ts","../Script/index.ts"],"names":[],"mappings":"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","sourcesContent":["enum DataType {\r\n    Email,\r\n    Mobile,\r\n    Required,\r\n    Url,\r\n    Number\r\n}\r\ninterface IMinMax {\r\n    Length: number,\r\n    Msg: string\r\n}\r\n\r\ninterface IError {\r\n    ErrorMsg: string,\r\n    Type: DataType,\r\n    Code: Function,\r\n    Regex: any,\r\n    Equal: { To: any, Msg: string },\r\n    IsRequired: boolean,\r\n    Min: IMinMax,\r\n    Max: IMinMax,\r\n    MinMax: {\r\n        Min: number,\r\n        Max: number,\r\n        Msg: string\r\n    }\r\n}\r\n\r\ninterface IOutResult {\r\n    Error: boolean,\r\n    Message: string\r\n}\r\n\r\nclass Helper {\r\n    Errors: Array<IError> = [];\r\n    protected getErrorType = function (error) {\r\n        switch (error.toLowerCase()) {\r\n            case 'email': return DataType.Email;\r\n            case 'mobile': return DataType.Mobile;\r\n            case 'url': return DataType.Url;\r\n            case 'number': return DataType.Number;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * return the error message\r\n     * \r\n     * @protected\r\n     * \r\n     * @memberOf Helper\r\n     */\r\n    protected getErrorMsg = function (errorType) {\r\n        var ErrorMessage = null;\r\n        this.Errors.forEach(function (item) {\r\n            if (item.Type == errorType) {\r\n                ErrorMessage = item.ErrorMsg;\r\n            }\r\n        });\r\n        if (ErrorMessage == null) {\r\n            return this.getDefaultErrorMsg(errorType);\r\n        }\r\n        return ErrorMessage;\r\n    }\r\n\r\n    private getDefaultErrorMsg = function (type: DataType) {\r\n        var Msg;\r\n        switch (type) {\r\n            case DataType.Number:\r\n                Msg = \"Value should contains only digits\"; break;\r\n            case DataType.Required:\r\n                Msg = \"Required Field\";\r\n                break;\r\n            case DataType.Email:\r\n                Msg = \"Invalid Email\";\r\n                break;\r\n            case DataType.Email:\r\n                Msg = \"Invalid Mobile\";\r\n                break;\r\n        }\r\n        return Msg;\r\n    }\r\n\r\n    /**\r\n     * check whether value is valid or not\r\n     * \r\n     * @protected\r\n     * \r\n     * @memberOf Helper\r\n     */\r\n    protected isValid = function (value, type): IOutResult {\r\n        var ErrorOccured: IOutResult, That = this;\r\n        this.Errors.forEach(function (item) {\r\n            if (type = item.Type) {\r\n                ErrorOccured = That.validateData(value, item);\r\n            }\r\n        });\r\n        if (ErrorOccured == null) {\r\n            ErrorOccured = That.validateData(value, { Type: type }, true);\r\n        }\r\n        return ErrorOccured;\r\n    }\r\n\r\n    private validateData = function (value, error: IError, isDefined = false): IOutResult {\r\n        var That: Helper = this, Result = <IOutResult>{},\r\n            ExecuteDefault = function () {\r\n                switch (error.Type) {\r\n                    case DataType.Number:\r\n                        return <IOutResult>{ Error: !isNaN(value), Message: That.getDefaultErrorMsg(error.Type) }\r\n                    case DataType.Email:\r\n                        var Regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                        return <IOutResult>{ Error: Regex.test(value), Message: \"Invalid Email\" }\r\n                    case DataType.Mobile:\r\n                        var Regex = /^[789]\\d{9}$/;\r\n                        return <IOutResult>{ Error: Regex.test(value), Message: That.getDefaultErrorMsg(error.Type) }\r\n                    case DataType.Url:\r\n                        var Regex = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\r\n                        return <IOutResult>{ Error: Regex.test(value), Message: That.getDefaultErrorMsg(error.Type) }\r\n                }\r\n            };\r\n        if (!isDefined) {\r\n            return ExecuteDefault();\r\n        }\r\n        else {\r\n            //if regex exist\r\n            if (error.Regex) {\r\n                return <IOutResult>{ Error: error.Regex.test(value), Message: That.getDefaultErrorMsg(error.Type) }\r\n            }\r\n            //if code exist\r\n            if (error.Code) {\r\n                return <IOutResult>{ Error: error.Code(), Message: That.getDefaultErrorMsg(error.Type) }\r\n            }\r\n            //MinMax Check\r\n            if (error.MinMax) {\r\n                return <IOutResult>{\r\n                    Error: (value.length >= error.MinMax.Min) && (value.length <= error.MinMax.Max),\r\n                    Message: error.MinMax.Msg == undefined ? \"The length of Value should be between \" + error.MinMax.Min.toString() + \"and \" + error.MinMax.Max.toString() : error.MinMax.Msg\r\n                }\r\n            }\r\n            //Min check\r\n            if (error.Min) {\r\n                return <IOutResult>{\r\n                    Error: value.length >= error.Min.Length,\r\n                    Message: \"Minimum length should be \" + error.Min.Length.toString()\r\n                }\r\n            }\r\n            // Max check\r\n            if (error.Max) {\r\n                return <IOutResult>{\r\n                    Error: value.length <= error.Max.Length,\r\n                    Message: \"Maximum length should be \" + error.Max.Length.toString()\r\n                }\r\n            }\r\n            // Equal To check\r\n            if (error.Equal) {\r\n                return <IOutResult>{\r\n                    Error: value === error.Equal.To,\r\n                    Message: error.Equal.Msg == undefined ? \"invalid value\" : error.Equal.Msg\r\n                }\r\n            }\r\n\r\n            //Default Execution\r\n            return ExecuteDefault();\r\n        }\r\n\r\n    }\r\n}\r\n\r\nclass JsValidator extends Helper {\r\n    constructor(errors: Array<IError> = []) {\r\n        super();\r\n        var That = this;\r\n        errors.forEach(function (item) {\r\n            item.Type = That.getErrorType(item.Type);\r\n            That.Errors.push(item);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * validate the value\r\n     * \r\n     * \r\n     * @memberOf JsValidator\r\n     */\r\n    validate = function (value, error: IError): IOutResult {\r\n        (error == undefined || error.IsRequired == undefined) ? true : error.IsRequired;\r\n        if ((error == undefined || error.IsRequired) && value.length == 0) {\r\n            return <IOutResult>{\r\n                Error: true, Message: this.getErrorMsg(DataType.Required)\r\n            };\r\n        }\r\n        if (error != null) {\r\n            return this.isValid(value, this.getErrorType(error.Type));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * set the error definition\r\n     * \r\n     * \r\n     * @memberOf JsValidator\r\n     */\r\n    setErrorDef = function (error) {\r\n        this.Errors.forEach(function (item, index) {\r\n            if (item.Type == error.Type) {\r\n                this.Errors.splice(index, 1);\r\n                return;\r\n            }\r\n        });\r\n        this.Errors.push(error);\r\n    }\r\n\r\n}\r\n\r\n","\r\n/// <reference path=\"Business/MainLogic.ts\" />\r\n\r\n"]}